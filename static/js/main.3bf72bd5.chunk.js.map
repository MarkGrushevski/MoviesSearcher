{"version":3,"sources":["views/App/components/search/Search.jsx","views/App/components/cards/Card.jsx","views/App/shared/getPosterPath.js","views/App/components/cards/Cards.jsx","views/App/components/App.jsx","shared/components/header/Header.jsx","shared/components/footer/Footer.jsx","index.js"],"names":["Search","searchMovies","languages","Map","useState","query","setQuery","language","setLanguage","className","id","type","value","onChange","ev","target","map","index","key","lang","name","checked","onClick","Card","posterPath","title","release_date","popularity","poster_path","overview","imagePath","src","alt","Cards","movies","length","movie","App","setMovies","fetch","process","then","r","json","data","results","catch","e","console","error","Header","href","Footer","Date","getUTCFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAEO,SAASA,EAAT,GAAiC,IAAhBC,EAAe,EAAfA,aACdC,EAAY,IAAIC,IAAI,CACtB,CAAC,QAAS,8CACV,CAAC,QAAS,WACV,CAAC,QAAS,uBAJqB,EAMTC,mBAAS,cANA,mBAM5BC,EAN4B,KAMrBC,EANqB,OAOHF,mBAAS,SAPN,mBAO5BG,EAP4B,KAOlBC,EAPkB,KASnC,OACI,sBAAKC,UAAU,gBAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,uBAAOC,GAAG,SACHC,KAAK,SACLF,UAAU,WACVG,MAAOP,EACPQ,SAAU,SAACC,GAAD,OAAQR,EAASQ,EAAGC,OAAOH,YAGhD,qBAAKH,UAAU,MAAf,SAEQ,YAAIP,GAAWc,KAAI,WAAcC,GAAd,uBAAEC,EAAF,KAAOC,EAAP,YACf,wBAAOV,UAAU,gBAAjB,UACI,uBAAOA,UAAU,WACVW,KAAK,WACLT,KAAK,QACLU,QAASd,IAAaW,EACtBL,SAAU,kBAAML,EAAYU,MAEnC,sBAAMT,UAAU,OAAhB,SAAwBU,MAPUF,QAYlD,wBAAQR,UAAU,MACVa,QAAS,kBAAMrB,EAAaI,EAAOE,IAD3C,wB,WClCL,SAASgB,EAAT,GAAyE,ICFlDC,EDERC,EAAyD,EAAzDA,MAAOC,EAAkD,EAAlDA,aAAcC,EAAoC,EAApCA,WAAYC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,SAC5DC,GCHsBN,EDGII,GCGxB,8BAAN,OADkB,OAClB,YAAkDJ,GAJvC,KDEX,OACI,sBAAKf,UAAU,OAAf,UACI,qBAAKA,UAAU,aAAf,SACI,qBAAKsB,IAAKD,EAAWE,IAAI,OAE7B,sBAAKvB,UAAU,gBAAf,UACI,oBAAIA,UAAU,cAAd,SAA6BgB,IAC7B,8BAAG,4CAAH,IAAuBE,KACvB,8BAAG,yCAAH,IAAoBD,KACpB,8BAAG,0CAAH,IAAqBG,WEX9B,SAASI,EAAT,GAA+B,IAAD,IAAdC,cAAc,MAAL,GAAK,EACjC,OACI,qBAAKzB,UAAU,kBAAf,SAEQyB,EAAOC,OACHD,EAAOlB,KAAI,SAAAoB,GAAK,OACZ,wBAACb,EAAD,2BACQa,GADR,IAEIlB,IAAKkB,EAAM1B,SAGlB,2CCTd,SAAS2B,IAAO,IAAD,EACUjC,mBAAS,IADnB,mBACX8B,EADW,KACHI,EADG,KAUlB,OAAQ,qCACJ,cAACtC,EAAD,CAAQC,aARS,SAACI,EAAOc,GACzBoB,MAAM,qDAAD,OAAsDC,mCAAtD,kBAA6FnC,EAA7F,qBAA+Gc,IAC/GsB,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACZF,MAAK,SAAAG,GAAI,OAAIN,EAAUM,EAAKC,YAC5BC,OAAM,SAAAC,GAAC,OAAIC,QAAQC,MAAMF,SAK9B,cAACd,EAAD,CAAOC,OAAQA,OChBhB,SAASgB,IACZ,OACI,wBAAQzC,UAAU,SAAlB,SACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,yBAAf,SACI,mBAAG0C,KAAK,IAAI1C,UAAU,6BAAtB,SAAmD,6CCLhE,SAAS2C,IACZ,OACI,wBAAQ3C,UAAU,cAAlB,SACI,qBAAKA,UAAU,mBAAf,SACI,sBAAKA,UAAU,uBAAf,mBACO,IAAI4C,MAAOC,iBADlB,kBAEI,mBAAG7C,UAAU,kCAAkC0C,KAAK,IAApD,SAAwD,oDCC5EI,IAASC,OACL,eAAC,IAAMC,WAAP,WACI,cAACP,EAAD,IACA,+BACI,cAACb,EAAD,MAEJ,cAACe,EAAD,OAEJM,SAASC,eAAe,W","file":"static/js/main.3bf72bd5.chunk.js","sourcesContent":["import {useState} from \"react\";\r\n\r\nexport function Search({searchMovies}) {\r\n    const languages = new Map([\r\n        [\"ru-RU\", \"Русский\"],\r\n        [\"en-EN\", \"English\"],\r\n        [\"cs-CZ\", \"Čeština\"]\r\n    ]);\r\n    const [query, setQuery] = useState(\"Terminator\");\r\n    const [language, setLanguage] = useState(\"en-EN\");\r\n    \r\n    return (\r\n        <div className=\"container row\">\r\n            <div className=\"input-field col s12\">\r\n                <input id=\"search\"\r\n                       type=\"search\"\r\n                       className=\"validate\"\r\n                       value={query}\r\n                       onChange={(ev) => setQuery(ev.target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"row\">\r\n                {\r\n                    [...languages].map(([key, lang], index) => (\r\n                        <label className=\"col s4 center\" key={index}>\r\n                            <input className=\"with-gap\"\r\n                                   name=\"language\"\r\n                                   type=\"radio\"\r\n                                   checked={language === key}\r\n                                   onChange={() => setLanguage(key)}\r\n                            />\r\n                            <span className=\"lang\">{lang}</span>\r\n                        </label>\r\n                    ))\r\n                }\r\n            </div>\r\n            <button className=\"btn\"\r\n                    onClick={() => searchMovies(query, language)}\r\n            >Search!\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n","import {getPosterPath} from \"../../shared/getPosterPath\";\r\n\r\nexport function Card({title, release_date, popularity, poster_path, overview}) {\r\n    let imagePath = getPosterPath(poster_path);\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-image\">\r\n                <img src={imagePath} alt=\"\"/>\r\n            </div>\r\n            <div className=\"card-content \">\r\n                <h3 className=\"card-title \">{title}</h3>\r\n                <p><b>Popularity:</b> {popularity}</p>\r\n                <p><b>Release:</b> {release_date}</p>\r\n                <p><b>Overview:</b> {overview}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","export function getPosterPath(posterPath) {\r\n    if (!posterPath) {\r\n        return null;\r\n    }\r\n    \r\n    const imageSize = \"w185\";\r\n    return `https://image.tmdb.org/t/p/${imageSize}/${posterPath}`;\r\n}\r\n","import {Card} from \"./Card\";\r\n\r\nexport function Cards({movies = []}) {\r\n    return (\r\n        <div className=\"cards container\">\r\n            {\r\n                movies.length ? (\r\n                    movies.map(movie => (\r\n                        <Card\r\n                            {...movie}\r\n                            key={movie.id}\r\n                        />\r\n                    ))\r\n                ) : (<h4>Nothing</h4>)\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","import {Search} from \"./search/Search\";\r\nimport {Cards} from \"./cards/Cards\";\r\nimport {useState} from \"react\";\r\n\r\nexport function App() {\r\n    const [movies, setMovies] = useState([]);\r\n    \r\n    const searchMovies = (query, lang) => {\r\n        fetch(`https://api.themoviedb.org/3/search/movie?api_key=${process.env.REACT_APP_API_KEY}&query=${query}&language=${lang}`)\r\n            .then(r => r.json())\r\n            .then(data => setMovies(data.results))\r\n            .catch(e => console.error(e));\r\n    };\r\n    \r\n    return (<>\r\n        <Search searchMovies={searchMovies}/>\r\n        <Cards movies={movies}/>\r\n    </>);\r\n}\r\n\r\n","export function Header() {\r\n    return (\r\n        <header className=\"header\">\r\n            <nav className=\"nav\">\r\n                <div className=\"nav-wrapper container \">\r\n                    <a href=\"/\" className=\"brand-logo left black-text\"><b>LOGO</b></a>\r\n                </div>\r\n            </nav>\r\n        </header>\r\n    );\r\n}\r\n","export function Footer() {\r\n    return (\r\n        <footer className=\"page-footer\">\r\n            <div className=\"footer-copyright\">\r\n                <div className=\"container black-text\">\r\n                    © {new Date().getUTCFullYear()} Copyright Text\r\n                    <a className=\"text-lighten-4 right black-text\" href=\"/\"><b>More Links</b></a>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./assets/styles/index.scss\";\r\nimport {App} from \"./views/App/index\";\r\nimport {Header} from \"./shared/components/header/Header\";\r\nimport {Footer} from \"./shared/components/footer/Footer\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Header/>\r\n        <main>\r\n            <App/>\r\n        </main>\r\n        <Footer/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n"],"sourceRoot":""}